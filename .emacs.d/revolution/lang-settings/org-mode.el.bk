;;; package --- Summary
;;; Commentary:
;; ======================================================================
;; @license Copyright 2016-2024 Pierre Schebath
;; ---------------------
;; 
;; @brief This file has been written by Pierre Etienne Charles Schebath Cazoulat.
;; 
;; This source code, its related data and algorithms are Pierre Schebath
;; Proprietary Informatichaon and shall be protected in strict confidence by
;; the party who receives it.  It shall not be disclosed nor copied nor
;; duplicated in whole or in part to any third party without Pierre Schebath
;; written prior permission.
;; ======================================================================
;; org-mode.el for lugtech in ~/.emacs.d/config/
;; @description: org-mode
;; 
;; Started on  Tue Jan 30 03:12:24 2024 @author Glider
;; Last update Fri Sep 26 03:15:18 2025 @author Glider
;; ======================================================================
;;; Code:


(unless (package-installed-p 'quelpa)
  (with-temp-buffer
    (url-insert-file-contents "https://raw.githubusercontent.com/quelpa/quelpa/master/quelpa.el")
    (eval-buffer)
    (quelpa-self-upgrade)))

(require 'quelpa)

(unless (package-installed-p 'quelpa-use-package)
  (quelpa
   '(quelpa-use-package :fetcher github :repo "quelpa/quelpa-use-package")))

(require 'quelpa-use-package)

(use-package company
  :ensure t
  :config
  (global-company-mode))

(use-package company-org-block :ensure t)

(use-package org
  :ensure t
  :config
  ;; Répertoire contenant tes fichiers org
  (setq org-directory "~/.emacs.d/revolution/planning/")
  (setq org-agenda-files '("~/.emacs.d/revolution/planning/todo.org"
                           "~/.emacs.d/revolution/planning/projets.org"
                           "~/.emacs.d/revolution/planning/rdv.org"))

  (setq org-auto-last-modified-apply nil)
  (remove-hook 'before-save-hook 'org-mtime-before-save)
  
  ;; Clé d’accès rapide à l’agenda
  (global-set-key (kbd "C-c a") 'org-agenda)

  ;; Vue personnalisée de l’agenda
  (setq org-agenda-custom-commands
        '(("c" "Vue personnalisée hebdo"
           ((agenda "" ((org-agenda-span 'week)
                        (org-agenda-start-on-weekday 1)
                        (org-agenda-start-day "-1d")
                        (org-agenda-skip-deadline-if-done t)
                        (org-agenda-skip-scheduled-if-done t)))
            (todo "TODO"
                  ((org-agenda-overriding-header "Tâches à faire")
                   (org-agenda-skip-function '(org-agenda-skip-entry-if 'deadline 'scheduled)))))
           ((org-agenda-compact-blocks t))))))



(add-to-list 'company-backends 'company-org-block)

(use-package log4e
  :quelpa (log4e :fetcher github :repo "aki2o/log4e"))

(use-package boxy-headings :ensure t)

(global-set-key "\C-cl" 'org-store-link)
(global-set-key "\C-ca" 'org-agenda)
(global-set-key "\C-cc" 'org-capture)
(global-set-key "\C-cb" 'org-iswitchb)

;; Add Org files to the agenda when we save them
(defun to-agenda-on-save-org-mode-file()
  (when (string= (message "%s" major-mode) "org-mode")
    (org-agenda-file-to-front)))

(add-hook 'after-save-hook 'to-agenda-on-save-org-mode-file)

(define-key org-mode-map (kbd "C-c g") 'boxy-headings) ;;; Affiche le fichier en mode graphique ;)

(defun strip-comment-line (str)
  ; <space> <star>* <space> <hash> <anything> <eol>
  (replace-regexp-in-string "[ ]*[*]*[ ]*#.*$" "" str))

(defun my-org-src-force-major-mode ()
  "Forcer le vrai major-mode dans les blocs SRC Org au lieu de `org-src-mode`."
  (when (eq major-mode 'org-src-mode)
    (let* ((lang (org-src-get-lang-mode (org-element-property :language (org-element-at-point))))
           (mode (intern lang)))
      (when (functionp mode)
        (funcall mode)))))

(add-hook 'org-src-mode-hook #'my-org-src-force-major-mode)

(provide 'org-mode)
;;; org-mode.el ends here
